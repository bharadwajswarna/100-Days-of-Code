# Longest Substring Without Repeating Characters

# Given a string s, find the length of the longest substring without repeating characters.
#Example:
#Input: s = "abcabcbb"
#Output: 3
#Explanation: The answer is "abc", with the length of 3.

class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        oo = [] ;
        for k in range(len(s)):
          counter = s[k]
          #print(k)
          for i in range(k+1,len(s),1):
            list_1 = [i for i in counter]
            if s[i] not in list_1:
              counter = counter + s[i]
            else:
              #print(counter)
              break
          oo.append(counter)
        #oo
        if len(oo)>0:
            op = len(max(oo, key=len))
        else:
            op = 0
        return op
